---
import Layout from '../layouts/Layout.astro';
import '../styles/global.css';
---

<Layout title="Ejemplo - Calculadora de √Årbol de Decisiones">
<div class="bg-gray-100 min-h-screen py-8">
    <div class="max-w-6xl mx-auto px-4">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-800 mb-4">üöÄ Ejemplo - Calculadora de √Årbol de Decisiones</h1>
            <p class="text-gray-600">Esta p√°gina tiene datos prellenados para que puedas probar inmediatamente</p>
            <div class="mt-4">
                <a href="/" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-colors">
                    ‚Üê Volver a la Calculadora Principal
                </a>
            </div>
        </div>

        <!-- Probabilidades -->
        <div class="bg-white rounded-lg shadow p-6 mb-6">
            <h2 class="text-xl font-semibold mb-4 text-blue-600">üéØ Probabilidades</h2>
            <div class="grid grid-cols-2 md:grid-cols-6 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Estado 1</label>
                    <input type="number" step="0.01" min="0" max="1" value="0.3"
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 probability-input" 
                           data-index="0">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Estado 2</label>
                    <input type="number" step="0.01" min="0" max="1" value="0.5"
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 probability-input" 
                           data-index="1">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Estado 3</label>
                    <input type="number" step="0.01" min="0" max="1" value="0.2"
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 probability-input" 
                           data-index="2">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Estado 4</label>
                    <input type="number" step="0.01" min="0" max="1" value=""
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 probability-input" 
                           data-index="3" placeholder="0.00">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Estado 5</label>
                    <input type="number" step="0.01" min="0" max="1" value=""
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 probability-input" 
                           data-index="4" placeholder="0.00">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">Estado 6</label>
                    <input type="number" step="0.01" min="0" max="1" value=""
                           class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 probability-input" 
                           data-index="5" placeholder="0.00">
                </div>
            </div>
            <div class="mt-4">
                <span class="text-sm text-gray-600">Suma total: </span>
                <span id="sum-display" class="font-semibold text-green-600">1.00</span>
                <span id="sum-status" class="ml-2 text-sm text-green-600">‚úì Correcto</span>
            </div>
        </div>

        <!-- Matriz de valores -->
        <div class="bg-white rounded-lg shadow p-6 mb-6">
            <h2 class="text-xl font-semibold mb-4 text-green-600">üí∞ Matriz de Valores (Payoffs)</h2>
            <div class="overflow-x-auto">
                <table class="w-full border-collapse border border-gray-300">
                    <thead>
                        <tr class="bg-gray-50">
                            <th class="border border-gray-300 px-4 py-2 text-left">Acci√≥n</th>
                            <th class="border border-gray-300 px-4 py-2">Estado 1</th>
                            <th class="border border-gray-300 px-4 py-2">Estado 2</th>
                            <th class="border border-gray-300 px-4 py-2">Estado 3</th>
                            <th class="border border-gray-300 px-4 py-2">Estado 4</th>
                            <th class="border border-gray-300 px-4 py-2">Estado 5</th>
                            <th class="border border-gray-300 px-4 py-2">Estado 6</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 font-medium bg-gray-50">Acci√≥n 1</td>
                            <td class="border border-gray-300 p-1 bg-blue-50">
                                <input type="number" step="any" value="100" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-100 value-input" data-row="0" data-col="0">
                            </td>
                            <td class="border border-gray-300 p-1 bg-blue-50">
                                <input type="number" step="any" value="50" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-100 value-input" data-row="0" data-col="1">
                            </td>
                            <td class="border border-gray-300 p-1 bg-blue-50">
                                <input type="number" step="any" value="20" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-100 value-input" data-row="0" data-col="2">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="0" data-col="3" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="0" data-col="4" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="0" data-col="5" placeholder="Valor">
                            </td>
                        </tr>
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 font-medium bg-gray-50">Acci√≥n 2</td>
                            <td class="border border-gray-300 p-1 bg-green-50">
                                <input type="number" step="any" value="80" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-green-100 value-input" data-row="1" data-col="0">
                            </td>
                            <td class="border border-gray-300 p-1 bg-green-50">
                                <input type="number" step="any" value="70" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-green-100 value-input" data-row="1" data-col="1">
                            </td>
                            <td class="border border-gray-300 p-1 bg-green-50">
                                <input type="number" step="any" value="60" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-green-100 value-input" data-row="1" data-col="2">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="1" data-col="3" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="1" data-col="4" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="1" data-col="5" placeholder="Valor">
                            </td>
                        </tr>
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 font-medium bg-gray-50">Acci√≥n 3</td>
                            <td class="border border-gray-300 p-1 bg-purple-50">
                                <input type="number" step="any" value="40" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-purple-100 value-input" data-row="2" data-col="0">
                            </td>
                            <td class="border border-gray-300 p-1 bg-purple-50">
                                <input type="number" step="any" value="90" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-purple-100 value-input" data-row="2" data-col="1">
                            </td>
                            <td class="border border-gray-300 p-1 bg-purple-50">
                                <input type="number" step="any" value="85" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-purple-100 value-input" data-row="2" data-col="2">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="2" data-col="3" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="2" data-col="4" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="2" data-col="5" placeholder="Valor">
                            </td>
                        </tr>
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 font-medium bg-gray-50">Acci√≥n 4</td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="3" data-col="0" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="3" data-col="1" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="3" data-col="2" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="3" data-col="3" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="3" data-col="4" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="3" data-col="5" placeholder="Valor">
                            </td>
                        </tr>
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 font-medium bg-gray-50">Acci√≥n 5</td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="4" data-col="0" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="4" data-col="1" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="4" data-col="2" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="4" data-col="3" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="4" data-col="4" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="4" data-col="5" placeholder="Valor">
                            </td>
                        </tr>
                        <tr>
                            <td class="border border-gray-300 px-4 py-2 font-medium bg-gray-50">Acci√≥n 6</td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="5" data-col="0" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="5" data-col="1" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="5" data-col="2" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="5" data-col="3" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="5" data-col="4" placeholder="Valor">
                            </td>
                            <td class="border border-gray-300 p-1">
                                <input type="number" step="any" class="w-full px-2 py-1 text-center border-none outline-none focus:bg-blue-50 value-input" data-row="5" data-col="5" placeholder="Valor">
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Botones -->
        <div class="bg-white rounded-lg shadow p-6 mb-6">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                <button id="calculate-step1" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-6 rounded-lg transition-colors shadow-md">
                    üìä Calcular Paso 1
                </button>
                <button id="calculate-step2" class="bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-6 rounded-lg transition-colors shadow-md disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                    ‚ö° Calcular Paso 2
                </button>
                <button id="reset-all" class="bg-red-600 hover:bg-red-700 text-white font-medium py-3 px-6 rounded-lg transition-colors shadow-md">
                    üîÑ Limpiar Todo
                </button>
            </div>
            
            <!-- Status -->
            <div id="status-message" class="mt-4 p-3 rounded-lg hidden">
                <div id="status-content"></div>
            </div>
        </div>

        <!-- Resultados -->
        <div id="results-container" class="space-y-6 hidden">
            <!-- Resultados Paso 1 -->
            <div id="results-step1" class="bg-white rounded-lg shadow p-6 hidden">
                <h2 class="text-xl font-semibold mb-4 text-blue-600">üìà Resultados - Paso 1</h2>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="bg-blue-50 rounded-lg p-4">
                        <h3 class="font-semibold text-blue-800 mb-3">üéØ Evento M√°s Probable</h3>
                        <div class="space-y-2">
                            <div>Estado: <span id="most-likely-state" class="font-bold"></span></div>
                            <div>Payoff: <span id="most-likely-payoff" class="font-bold"></span></div>
                        </div>
                    </div>
                    
                    <div class="bg-green-50 rounded-lg p-4">
                        <h3 class="font-semibold text-green-800 mb-3">üí∞ Pago Esperado M√°ximo</h3>
                        <div class="space-y-2">
                            <div>Mejor Acci√≥n: <span id="best-action" class="font-bold"></span></div>
                            <div>Pago Esperado: <span id="expected-payoff" class="font-bold"></span></div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Resultados Paso 2 -->
            <div id="results-step2" class="bg-white rounded-lg shadow p-6 hidden">
                <h2 class="text-xl font-semibold mb-4 text-green-600">‚ö° Resultados - Paso 2</h2>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="bg-purple-50 rounded-lg p-4">
                        <h3 class="font-semibold text-purple-800 mb-3">üé≤ M√≠nimo Arrepentimiento</h3>
                        <div class="space-y-2">
                            <div>Acci√≥n: <span id="regret-action" class="font-bold"></span></div>
                            <div>Arrepentimiento: <span id="regret-value" class="font-bold"></span></div>
                        </div>
                    </div>
                    
                    <div class="bg-yellow-50 rounded-lg p-4">
                        <h3 class="font-semibold text-yellow-800 mb-3">üìä Informaci√≥n Perfecta</h3>
                        <div class="space-y-2">
                            <div>Retorno Perfecto: <span id="perfect-return" class="font-bold"></span></div>
                            <div>VPI: <span id="vpi-value" class="font-bold"></span></div>
                        </div>
                    </div>
                    
                    <div class="bg-indigo-50 rounded-lg p-4">
                        <h3 class="font-semibold text-indigo-800 mb-3">üìà Eficiencia</h3>
                        <div class="space-y-2">
                            <div>Eficiencia: <span id="efficiency" class="font-bold"></span></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Enlaces √∫tiles -->
        <div class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg shadow p-6 text-white">
            <h2 class="text-xl font-semibold mb-4">üöÄ Otras versiones</h2>
            <div class="flex flex-wrap gap-3">
                <a href="/" class="bg-white text-blue-600 hover:bg-gray-100 font-medium py-2 px-4 rounded-lg transition-colors">
                    üè† Calculadora Principal
                </a>
                <a href="/simple" class="bg-white/20 hover:bg-white/30 text-white border border-white/30 font-medium py-2 px-4 rounded-lg transition-colors">
                    üîß Versi√≥n Simple
                </a>
                <button id="reset-to-example" class="bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
                    üîÑ Restaurar Ejemplo
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Mismo script que en simple.astro pero sin el bot√≥n de ejemplo -->
<script>
        // @ts-nocheck
        // [Mismo c√≥digo JavaScript que en simple.astro, copiado aqu√≠]
        
        // Clase para calcular √°rbol de decisiones
        class DecisionTreeCalculator {
            constructor(probabilities, values) {
                this.probabilities = probabilities;
                this.values = values;
            }

            validateProbabilities() {
                const sum = this.probabilities.reduce((acc, val) => acc + val, 0);
                return Math.abs(sum - 1.0) < 0.0000000001;
            }

            validateData() {
                const totalCells = this.values.flat().filter(val => !isNaN(val) && val !== null && val !== '').length;
                return totalCells >= 4;
            }

            calculateStep1() {
                if (!this.validateProbabilities()) {
                    throw new Error('Las probabilidades deben sumar exactamente 1.00');
                }
                if (!this.validateData()) {
                    throw new Error('Se necesitan al menos 4 valores en la matriz');
                }

                // Calcular pago esperado para cada acci√≥n
                const expectedPayoffs = [];
                for (let row = 0; row < this.values.length; row++) {
                    let sum = 0;
                    let hasValues = false;
                    for (let col = 0; col < this.probabilities.length; col++) {
                        if (!isNaN(this.values[row][col]) && this.values[row][col] !== null && this.values[row][col] !== '') {
                            sum += parseFloat(this.values[row][col]) * this.probabilities[col];
                            hasValues = true;
                        }
                    }
                    if (hasValues) expectedPayoffs.push(sum);
                }

                // Encontrar la acci√≥n con mayor pago esperado
                const maxExpectedPayoff = Math.max(...expectedPayoffs);
                const bestActionIndex = expectedPayoffs.indexOf(maxExpectedPayoff);

                // Encontrar la probabilidad m√°s alta
                const maxProbability = Math.max(...this.probabilities);
                const mostLikelyStateIndex = this.probabilities.indexOf(maxProbability);
                
                // Encontrar el mejor pago en la columna del estado m√°s probable
                const columnValues = [];
                for (let row = 0; row < this.values.length; row++) {
                    const val = this.values[row][mostLikelyStateIndex];
                    if (!isNaN(val) && val !== null && val !== '') {
                        columnValues.push(parseFloat(val));
                    }
                }
                const maxPayoffInColumn = Math.max(...columnValues);

                return {
                    mostLikelyEvent: {
                        state: mostLikelyStateIndex + 1,
                        payoff: maxPayoffInColumn
                    },
                    expectedPayoff: {
                        action: bestActionIndex + 1,
                        payoff: maxExpectedPayoff
                    }
                };
            }

            calculateStep2() {
                const step1Results = this.calculateStep1();
                
                // Encontrar el m√°ximo en cada columna
                const columnMaxes = [];
                for (let col = 0; col < this.probabilities.length; col++) {
                    const columnValues = [];
                    for (let row = 0; row < this.values.length; row++) {
                        const val = this.values[row][col];
                        if (!isNaN(val) && val !== null && val !== '') {
                            columnValues.push(parseFloat(val));
                        }
                    }
                    if (columnValues.length > 0) {
                        columnMaxes.push(Math.max(...columnValues));
                    } else {
                        columnMaxes.push(0);
                    }
                }

                // Crear matriz de arrepentimiento y calcular arrepentimientos esperados
                const expectedRegrets = [];
                for (let row = 0; row < this.values.length; row++) {
                    let sum = 0;
                    let hasValues = false;
                    for (let col = 0; col < this.probabilities.length; col++) {
                        const val = this.values[row][col];
                        if (!isNaN(val) && val !== null && val !== '') {
                            const regret = columnMaxes[col] - parseFloat(val);
                            sum += regret * this.probabilities[col];
                            hasValues = true;
                        }
                    }
                    if (hasValues) expectedRegrets.push(sum);
                }

                // Encontrar el m√≠nimo arrepentimiento esperado
                const minExpectedRegret = Math.min(...expectedRegrets);
                const bestRegretActionIndex = expectedRegrets.indexOf(minExpectedRegret);

                // Calcular valor de informaci√≥n perfecta
                const perfectReturn = columnMaxes.reduce((sum, max, index) => sum + max * this.probabilities[index], 0);
                const vpi = perfectReturn - step1Results.expectedPayoff.payoff;
                const efficiency = (vpi / perfectReturn) * 100;

                return {
                    minExpectedRegret: {
                        action: bestRegretActionIndex + 1,
                        value: minExpectedRegret
                    },
                    perfectInformation: {
                        return: perfectReturn,
                        vpi: vpi,
                        efficiency: efficiency
                    }
                };
            }
        }

        // Variables globales
        let step1Results = null;

        // Funciones de utilidad
        function gatherData() {
            // Recopilar probabilidades
            const probabilities = [];
            document.querySelectorAll('.probability-input').forEach(input => {
                const value = parseFloat(input.value) || 0;
                probabilities.push(value);
            });

            // Recopilar valores de la matriz
            const values = Array(6).fill(null).map(() => Array(6).fill(NaN));
            document.querySelectorAll('.value-input').forEach(input => {
                const row = parseInt(input.dataset.row);
                const col = parseInt(input.dataset.col);
                const value = input.value.trim() === '' ? NaN : parseFloat(input.value);
                if (!isNaN(row) && !isNaN(col)) {
                    values[row][col] = value;
                }
            });

            return { probabilities, values };
        }

        function showStatus(type, message) {
            const statusDiv = document.getElementById('status-message');
            const statusContent = document.getElementById('status-content');
            
            if (!statusDiv || !statusContent) return;
            
            statusDiv.className = 'mt-4 p-3 rounded-lg';
            
            if (type === 'success') {
                statusDiv.classList.add('bg-green-100', 'text-green-800', 'border', 'border-green-300');
                statusContent.innerHTML = `‚úÖ ${message}`;
            } else if (type === 'error') {
                statusDiv.classList.add('bg-red-100', 'text-red-800', 'border', 'border-red-300');
                statusContent.innerHTML = `‚ùå ${message}`;
            } else if (type === 'info') {
                statusDiv.classList.add('bg-blue-100', 'text-blue-800', 'border', 'border-blue-300');
                statusContent.innerHTML = `‚ÑπÔ∏è ${message}`;
            }
            
            statusDiv.classList.remove('hidden');
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                statusDiv.classList.add('hidden');
            }, 5000);
        }

        function updateProbabilitySum() {
            let sum = 0;
            document.querySelectorAll('.probability-input').forEach(input => {
                sum += parseFloat((input as HTMLInputElement).value) || 0;
            });
            
            const sumDisplay = document.getElementById('sum-display');
            const sumStatus = document.getElementById('sum-status');
            
            if (!sumDisplay || !sumStatus) return;
            
            sumDisplay.textContent = sum.toFixed(2);
            
            if (Math.abs(sum - 1.0) < 0.01) {
                sumStatus.innerHTML = '<span class="text-green-600">‚úì Correcto</span>';
                sumStatus.className = 'ml-2 text-sm text-green-600';
                sumDisplay.className = 'font-semibold text-green-600';
            } else {
                sumStatus.innerHTML = '<span class="text-red-600">‚ö† Debe sumar 1.00</span>';
                sumStatus.className = 'ml-2 text-sm text-red-600';
                sumDisplay.className = 'font-semibold text-red-600';
            }
        }

        // Event Listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Actualizar suma de probabilidades
            document.querySelectorAll('.probability-input').forEach(input => {
                input.addEventListener('input', updateProbabilitySum);
            });

            // Calcular Paso 1
            document.getElementById('calculate-step1')?.addEventListener('click', function() {
                try {
                    const data = gatherData();
                    const calculator = new DecisionTreeCalculator(data.probabilities, data.values);
                    step1Results = calculator.calculateStep1();
                    
                    // Mostrar resultados
                    document.getElementById('results-container')?.classList.remove('hidden');
                    document.getElementById('results-step1')?.classList.remove('hidden');
                    
                    const mostLikelyState = document.getElementById('most-likely-state');
                    const mostLikelyPayoff = document.getElementById('most-likely-payoff');
                    const bestAction = document.getElementById('best-action');
                    const expectedPayoff = document.getElementById('expected-payoff');
                    
                    if (mostLikelyState) mostLikelyState.textContent = step1Results.mostLikelyEvent.state.toString();
                    if (mostLikelyPayoff) mostLikelyPayoff.textContent = step1Results.mostLikelyEvent.payoff.toFixed(2);
                    if (bestAction) bestAction.textContent = step1Results.expectedPayoff.action.toString();
                    if (expectedPayoff) expectedPayoff.textContent = step1Results.expectedPayoff.payoff.toFixed(2);
                    
                    // Habilitar paso 2
                    const step2Button = document.getElementById('calculate-step2');
                    if (step2Button) step2Button.disabled = false;
                    
                    showStatus('success', 'Paso 1 calculado correctamente');
                    
                    // Scroll to results
                    document.getElementById('results-container')?.scrollIntoView({ behavior: 'smooth' });
                } catch (error) {
                    showStatus('error', error?.message || 'Error desconocido');
                }
            });

            // Calcular Paso 2
            document.getElementById('calculate-step2')?.addEventListener('click', function() {
                try {
                    const data = gatherData();
                    const calculator = new DecisionTreeCalculator(data.probabilities, data.values);
                    const step2Results = calculator.calculateStep2();
                    
                    // Mostrar resultados
                    document.getElementById('results-step2')?.classList.remove('hidden');
                    
                    const regretAction = document.getElementById('regret-action');
                    const regretValue = document.getElementById('regret-value');
                    const perfectReturn = document.getElementById('perfect-return');
                    const vpiValue = document.getElementById('vpi-value');
                    const efficiency = document.getElementById('efficiency');
                    
                    if (regretAction) regretAction.textContent = step2Results.minExpectedRegret.action.toString();
                    if (regretValue) regretValue.textContent = step2Results.minExpectedRegret.value.toFixed(4);
                    if (perfectReturn) perfectReturn.textContent = step2Results.perfectInformation.return.toFixed(2);
                    if (vpiValue) vpiValue.textContent = step2Results.perfectInformation.vpi.toFixed(4);
                    if (efficiency) efficiency.textContent = step2Results.perfectInformation.efficiency.toFixed(2) + '%';
                    
                    showStatus('success', 'Paso 2 calculado correctamente');
                    
                    // Scroll to results
                    document.getElementById('results-step2')?.scrollIntoView({ behavior: 'smooth' });
                } catch (error) {
                    showStatus('error', error?.message || 'Error desconocido');
                }
            });

            // Reset
            document.getElementById('reset-all')?.addEventListener('click', function() {
                if (confirm('¬øEst√°s seguro de que quieres limpiar todos los datos?')) {
                    // Restaurar valores originales del ejemplo
                    const probInputs = document.querySelectorAll('.probability-input');
                    const exampleProbs = [0.3, 0.5, 0.2, 0, 0, 0];
                    probInputs.forEach((input, index) => {
                        (input as HTMLInputElement).value = exampleProbs[index]?.toString() || '';
                    });

                    // Restaurar valores de la matriz
                    const exampleValues = [
                        [100, 50, 20, '', '', ''],
                        [80, 70, 60, '', '', ''],
                        [40, 90, 85, '', '', ''],
                        ['', '', '', '', '', ''],
                        ['', '', '', '', '', ''],
                        ['', '', '', '', '', '']
                    ];

                    document.querySelectorAll('.value-input').forEach(input => {
                        const htmlInput = input as HTMLInputElement;
                        const row = parseInt(htmlInput.dataset.row || '0');
                        const col = parseInt(htmlInput.dataset.col || '0');
                        htmlInput.value = exampleValues[row]?.[col]?.toString() || '';
                    });
                    
                    // Ocultar resultados
                    document.getElementById('results-container')?.classList.add('hidden');
                    document.getElementById('results-step1')?.classList.add('hidden');
                    document.getElementById('results-step2')?.classList.add('hidden');
                    
                    // Deshabilitar paso 2
                    const step2Button = document.getElementById('calculate-step2') as HTMLButtonElement;
                    if (step2Button) step2Button.disabled = true;
                    
                    updateProbabilitySum();
                    showStatus('info', 'Datos restaurados al ejemplo original');
                }
            });

            // Inicializar suma
            updateProbabilitySum();
        });
    </script>
</Layout>